server:
  port: 7101
spring:
  application:
    name: gateway
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  #redis
  redis:
    host: localhost # Redis服务器地址
    database: 0 # Redis数据库索引（默认为0）
    port: 6379 # Redis服务器连接端口
    password: # Redis服务器连接密码（默认为空）
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
    timeout: 3000ms # 连接超时时间（毫秒）
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
#        server-addr: 192.168.58.133:1111
    gateway:
      filter:
        remove-hop-by-hop:
          headers:
            # 以下是去掉网关默认去掉的请求响应头
            - trailer
            - te
            - keep-alive
            - transfer-encoding
            - upgrade
            - proxy-authenticate
            - connection
            - proxy-authorization
            - x-application-context
            # 以下是去掉服务层面定义的跨域
            - access-control-allow-credentials
            - access-control-allow-headers
            - access-control-allow-methods
            - access-control-allow-origin
            - access-control-max-age
            - vary
      globalcors:
        corsConfigurations:
          '[/**]':
            allowCredentials: true
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowedMethods: "*"
            maxAge: 3628800
      discovery:
        locator:
          enabled: true #开起动态注册
      routes:
        - id: user_routh #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://user-service7002   #匹配后提供服务的路由地址
          predicates:
            - Path=/user/**   #断言,路径相匹配的进行路由
            #- After=2020-03-08T10:59:34.102+08:00[Asia/Shanghai]
        - id: product_routh #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://product-service7003   #匹配后提供服务的路由地址
          predicates:
            - Path=/product/**   #断言,路径相匹配的进行路由
            #- After=2020-03-08T10:59:34.102+08:00[Asia/Shanghai]
        - id: order_routh #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://order-service7004   #匹配后提供服务的路由地址
          predicates:
            - Path=/order/**   #断言,路径相匹配的进行路由
            #- After=2020-03-08T10:59:34.102+08:00[Asia/Shanghai]
#       routes:
#        - id: consumer_routh #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8082   #匹配后提供服务的路由地址
#          predicates:
#            - Path=/consumer/paymenttimeout/**   #断言,路径相匹配的进行路由
#
#        - id: consumer_routh2
#          uri: http://localhost:8082
#          predicates:
#            - Path=/consumer/paymentbreaker/**   #断言,路径相匹配的进行路由


